<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dify4j.app.mapper.InstalledAppMapper">

    <resultMap id="installedAppResultMap" type="com.dify4j.api.app.DefaultInstalledApp">
        <id column="id" property="id" jdbcType="OTHER"/>
        <result column="tenant_id" property="tenantId" jdbcType="OTHER"/>
        <result column="app_id" property="appId" jdbcType="OTHER"/>
        <result column="app_owner_tenant_id" property="appOwnerTenantId" jdbcType="OTHER"/>
        <result column="position" property="position"/>
        <result column="is_pinned" property="isPinned"/>
        <result column="last_used_at" property="lastUsedAt"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, tenant_id, app_id, app_owner_tenant_id, position, is_pinned, last_used_at, created_at
    </sql>

    <select id="selectById" resultMap="installedAppResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM installed_apps
        WHERE id = #{id}::uuid
    </select>

    <select id="selectList" resultMap="installedAppResultMap">
        SELECT
             installed_apps.*
        FROM installed_apps,apps
        WHERE installed_apps.app_id = apps.id AND
              installed_apps.tenant_id = #{tenantId}::uuid
        <if test="params.name != null and params.name != ''">and apps.name like concat('%', #{params.name}, '%')</if>
        <if test="params.mode != null and params.mode != ''">and apps.mode = #{params.mode}</if>
        <if test="params.roleIds != null and params.roleIds.size() > 0">
            AND EXISTS (
                SELECT 1 FROM dify4j_app_role 
                WHERE app_id = apps.id 
                AND role_id IN 
                <foreach collection="params.roleIds" item="roleId" open="(" separator="," close=")">
                    #{roleId}::uuid
                </foreach>
            )
        </if>
        ORDER BY last_used_at DESC
      
    </select>



    <select id="selectByTenantId" resultMap="installedAppResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM installed_apps
        WHERE tenant_id = #{tenantId}::uuid
        ORDER BY last_used_at DESC
    </select>

    <insert id="insert">
        INSERT INTO installed_apps (
            id, tenant_id, app_id, app_owner_tenant_id, position, is_pinned, last_used_at, created_at
        ) VALUES (
            #{id}::uuid,
            #{tenantId}::uuid,
            #{appId}::uuid,
            #{appOwnerTenantId}::uuid,
            #{position},
            #{isPinned},
            #{lastUsedAt},
            #{createdAt}
        )
    </insert>

    <update id="update">
        UPDATE installed_apps
        <set>
            <if test="position != null">
                position = #{position},
            </if>
            <if test="isPinned != null">
                is_pinned = #{isPinned},
            </if>
            <if test="lastUsedAt != null">
                last_used_at = #{lastUsedAt},
            </if>
        </set>
        WHERE id = #{id}::uuid
    </update>

    <update id="updateLastUsedAt">
        UPDATE installed_apps
        SET last_used_at = #{lastUsedAt}
        WHERE id = #{id}::uuid
    </update>

    <update id="updatePinStatus">
        UPDATE installed_apps
        SET is_pinned = #{isPinned}
        WHERE id = #{id}::uuid
    </update>

    <update id="updatePosition">
        UPDATE installed_apps
        SET position = #{position}
        WHERE id = #{id}::uuid
    </update>

    <delete id="deleteById">
        DELETE FROM installed_apps
        WHERE id = #{id}::uuid
    </delete>

    <delete id="deleteByIds">
        DELETE FROM installed_apps
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}::uuid
        </foreach>
    </delete>

    <delete id="deleteByAppId">
        DELETE FROM installed_apps
        WHERE app_id = #{a}::uuid
    </delete>
</mapper>
